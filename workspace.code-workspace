{
  "folders": [
    {
      "name": "Backend",
      "path": "./backend"
    },
    {
      "name": "Frontend",
      "path": "./frontend"
    },
    {
      "name": "Mobile",
      "path": "./mobile"
    },
    {
      "name": "Documentation",
      "path": "./docs"
    },
    {
      "name": "Scripts",
      "path": "./scripts"
    },
    {
      "name": "Tests",
      "path": "./tests"
    }
  ],
  "settings": {
    // Editor Configuration
    "editor.fontSize": 14,
    "editor.fontFamily": "'Fira Code', 'Cascadia Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": true,
    "editor.trimAutoWhitespace": true,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true,
      "source.organizeImports": true
    },
    "editor.rulers": [80, 120],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 120,
    
    // File Configuration
    "files.autoSave": "onFocusChange",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/.git": true,
      "**/.DS_Store": true,
      "**/coverage": true,
      "**/*.log": true
    },
    "files.associations": {
      "*.env*": "properties",
      "Dockerfile*": "dockerfile",
      "*.yml": "yaml",
      "*.yaml": "yaml"
    },
    
    // Search Configuration
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/coverage": true,
      "**/*.log": true,
      "**/logs": true
    },
    
    // JavaScript/TypeScript Configuration
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "javascript.suggest.autoImports": true,
    "typescript.suggest.autoImports": true,
    "javascript.preferences.importModuleSpecifier": "relative",
    "typescript.preferences.importModuleSpecifier": "relative",
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
    
    // ESLint Configuration
    "eslint.validate": [
      "javascript",
      "javascriptreact",
      "typescript",
      "typescriptreact"
    ],
    "eslint.workingDirectories": [
      "./backend",
      "./frontend"
    ],
    "eslint.format.enable": true,
    
    // Prettier Configuration
    "prettier.requireConfig": true,
    "prettier.configPath": "./.prettierrc",
    
    // Git Configuration
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    "git.enableStatusBarSync": true,
    "scm.defaultViewMode": "tree",
    
    // Terminal Configuration
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.fontFamily": "'Fira Code', 'Cascadia Code', Consolas",
    
    // Extension-Specific Settings
    "emmet.includeLanguages": {
      "javascript": "javascriptreact",
      "typescript": "typescriptreact"
    },
    "emmet.triggerExpansionOnTab": true,
    
    // REST Client
    "rest-client.defaultHeaders": {
      "Content-Type": "application/json"
    },
    "rest-client.environmentVariables": {
      "local": {
        "baseUrl": "http://localhost:5000/api/v1",
        "token": ""
      },
      "staging": {
        "baseUrl": "https://api-staging.yourorg.com/v1",
        "token": ""
      }
    },
    
    // Thunder Client (Alternative REST Client)
    "thunder-client.workspaceRelativePath": "thunder-tests",
    
    // MongoDB for VS Code
    "mdb.connectionSaving.defaultConnectionSavingLocation": "Workspace",
    "mdb.defaultLimit": 100,
    
    // Docker
    "docker.defaultRegistryPath": "your-registry",
    "docker.imageBuildContextPath": "",
    
    // Live Server
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.port": 3000,
    "liveServer.settings.root": "/frontend/build",
    
    // Bracket Pair Colorizer (Built-in)
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    
    // IntelliSense
    "typescript.preferences.includePackageJsonAutoImports": "auto",
    "javascript.preferences.includePackageJsonAutoImports": "auto",
    
    // File Icon Theme
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.folders.associations": {
      "controllers": "controller",
      "models": "database",
      "routes": "route",
      "middleware": "middleware",
      "services": "services",
      "utils": "tools",
      "config": "config",
      "biometric": "secure",
      "attendance": "event",
      "reports": "dump"
    },
    
    // Color Theme
    "workbench.colorTheme": "One Dark Pro",
    
    // Minimap
    "editor.minimap.enabled": true,
    "editor.minimap.maxColumn": 120,
    
    // Breadcrumbs
    "breadcrumbs.enabled": true,
    "breadcrumbs.showFiles": true,
    "breadcrumbs.showSymbols": true,
    
    // Problems Panel
    "problems.autoReveal": true,
    
    // Debug Configuration
    "debug.allowBreakpointsEverywhere": true,
    "debug.openDebug": "openOnDebugBreak"
  },
  "extensions": {
    "recommendations": [
      // Essential Extensions
      "ms-vscode.vscode-typescript-next",
      "bradlc.vscode-tailwindcss",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      "formulahendry.auto-rename-tag",
      "christian-kohler.path-intellisense",
      "ms-vscode.vscode-json",
      
      // JavaScript/Node.js
      "ms-vscode.vscode-node-extension-pack",
      "VisualStudioExptTeam.vscodeintellicode",
      "ms-vscode.vscode-js-debug-nightly",
      
      // React Development
      "msjsdiag.vscode-react-native",
      "burkeholland.simple-react-snippets",
      "dsznajder.es7-react-js-snippets",
      
      // Database
      "mongodb.mongodb-vscode",
      "ms-mssql.mssql",
      "ckolkman.vscode-postgres",
      
      // API Development
      "humao.rest-client",
      "rangav.vscode-thunder-client",
      "42crunch.vscode-openapi",
      
      // Docker & Containers
      "ms-azuretools.vscode-docker",
      "ms-vscode-remote.remote-containers",
      
      // Git
      "eamodio.gitlens",
      "mhutchie.git-graph",
      "donjayamanne.githistory",
      
      // Testing
      "hbenl.vscode-test-explorer",
      "ms-vscode.test-adapter-converter",
      "orta.vscode-jest",
      
      // Productivity
      "ms-vscode.vscode-todo-highlight",
      "Gruntfuggly.todo-tree",
      "wayou.vscode-todo-highlight",
      "alefragnani.Bookmarks",
      "ms-vscode.notepadplusplus-keybindings",
      
      // Themes & Icons
      "zhuangtongfa.Material-theme",
      "PKief.material-icon-theme",
      "GitHub.github-vscode-theme",
      
      // Formatting & Linting
      "ms-python.isort",
      "ms-python.black-formatter",
      "ms-python.flake8",
      
      // Markdown
      "yzhang.markdown-all-in-one",
      "DavidAnson.vscode-markdownlint",
      "ms-vscode.vscode-markdown-math",
      
      // YAML
      "redhat.vscode-yaml",
      
      // Live Server
      "ritwickdey.LiveServer",
      
      // Environment Variables
      "mikestead.dotenv",
      
      // Comments
      "aaron-bond.better-comments",
      
      // Spell Check
      "streetsidesoftware.code-spell-checker"
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Install Dependencies",
        "type": "shell",
        "command": "npm install",
        "options": {
          "cwd": "${workspaceFolder}/backend"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Install Frontend Dependencies",
        "type": "shell",
        "command": "npm install",
        "options": {
          "cwd": "${workspaceFolder}/frontend"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Start Backend Dev",
        "type": "shell",
        "command": "npm run dev",
        "options": {
          "cwd": "${workspaceFolder}/backend"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Start Frontend Dev",
        "type": "shell",
        "command": "npm start",
        "options": {
          "cwd": "${workspaceFolder}/frontend"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Run Tests",
        "type": "shell",
        "command": "npm test",
        "options": {
          "cwd": "${workspaceFolder}/backend"
        },
        "group": "test",
        "problemMatcher": []
      },
      {
        "label": "Build Production",
        "type": "shell",
        "command": "npm run build",
        "options": {
          "cwd": "${workspaceFolder}/frontend"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Docker Build",
        "type": "shell",
        "command": "docker-compose build",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "build",
        "problemMatcher": []
      },
      {
        "label": "Docker Up",
        "type": "shell",
        "command": "docker-compose up -d",
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "group": "build",
        "problemMatcher": []
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Debug Backend",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/src/server.js",
        "console": "integratedTerminal",
        "env": {
          "NODE_ENV": "development"
        },
        "envFile": "${workspaceFolder}/backend/.env",
        "skipFiles": [
          "<node_internals>/**"
        ]
      },
      {
        "name": "Debug Frontend",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/frontend/node_modules/react-scripts/bin/react-scripts.js",
        "args": [
          "start"
        ],
        "cwd": "${workspaceFolder}/frontend",
        "console": "integratedTerminal",
        "env": {
          "BROWSER": "none"
        }
      },
      {
        "name": "Debug Tests",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/node_modules/jest/bin/jest.js",
        "args": [
          "--runInBand",
          "--detectOpenHandles",
          "--forceExit"
        ],
        "console": "integratedTerminal",
        "cwd": "${workspaceFolder}/backend",
        "env": {
          "NODE_ENV": "test"
        }
      }
    ]
  }
}